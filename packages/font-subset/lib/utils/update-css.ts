import fs from 'fs';
import path from 'path';

import type { FontSubsetOutput } from '../types';

function toUnicode(codes: number[]) {
  return codes.map((code) => `U+${code.toString(16).toUpperCase()}`);
}

export function updateCSS(
  publicDir: string,
  output: FontSubsetOutput,
  fontName: string,
  fontFamily: string,
  range: number[],
) {
  const outputRelativePath = path.relative(publicDir, output.font);

  const css = `/** Auto generated by font-subset */
@font-face{
  font-family: "${fontName}";
  font-style: normal;
  font-weight: normal;
  font-display: swap;
  src: url('/blog/${outputRelativePath}/${fontFamily}') format('woff2');
  unicode-range: ${toUnicode(range).join(',')};
}`;

  fs.writeFileSync(output.css, css);
}
